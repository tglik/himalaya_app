{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nvar _jsxFileName = \"/Users/tsahi/src/AwesomeProject/table.js\";\nimport React, { useState } from 'react';\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { PinchGestureHandler, State } from 'react-native-gesture-handler';\nimport { onGestureEvent, pinchActive, pinchBegan, transformOrigin, timing, translate, vec } from \"react-native-redash\";\nimport Animated, { block, cond, eq, multiply, set, useCode, Value } from 'react-native-reanimated';\n\nfunction Piece(props) {\n  return React.createElement(View, {\n    style: {\n      backgroundColor: props.color,\n      width: 30,\n      height: 30\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 9\n    }\n  });\n}\n\nvar SIZE = 300;\nexport default (function (props) {\n  var state = new Value(State.UNDETERMINED);\n  var scale = new Value(1);\n  var focal = vec.createValue(0, 0);\n  var numberOfPointers = new Value(0);\n  var pinchGestureHandler = onGestureEvent({\n    numberOfPointers: numberOfPointers,\n    state: state,\n    scale: scale,\n    focalX: focal.x,\n    focalY: focal.y\n  });\n  var origin = vec.createValue(0, 0);\n  var pinch = vec.createValue(0, 0);\n  var prevScale = new Value(1);\n  var prevPinch = vec.createValue(0, 0);\n  var prevOrigin = vec.createValue(0, 0);\n  var finalScale = multiply(scale, prevScale);\n  var finalPinch = vec.add(pinch, prevPinch);\n  var midPoint = {\n    x: SIZE / 2,\n    y: SIZE / 2\n  };\n  var adjustedFocal = vec.sub(focal, midPoint);\n  useCode(function () {\n    return block([cond(pinchBegan(state), vec.set(origin, adjustedFocal)), cond(pinchActive(state, numberOfPointers), [vec.set(pinch, vec.minus(vec.sub(origin, adjustedFocal)))]), cond(eq(state, State.END), [set(prevScale, scale), vec.set(prevPinch, finalPinch), vec.set(prevOrigin, origin)])]);\n  }, [adjustedFocal, numberOfPointers, origin, pinch, scale, state]);\n  return React.createElement(Animated.View, {\n    style: {\n      width: SIZE,\n      height: SIZE\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }, React.createElement(PinchGestureHandler, _extends({}, pinchGestureHandler, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }\n  }), React.createElement(Animated.View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 17\n    }\n  }, React.createElement(Animated.View, {\n    style: [styles.table, {\n      transform: [].concat(_toConsumableArray(translate(origin)), [{\n        scale: scale\n      }], _toConsumableArray(translate(vec.multiply(origin, -1))))\n    }],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 21\n    }\n  }, React.createElement(ImageBackground, {\n    source: require(\"./assets/us-map.jpg\"),\n    style: {\n      width: SIZE,\n      height: SIZE\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 25\n    }\n  }, React.createElement(Piece, {\n    color: \"blue\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 29\n    }\n  }), React.createElement(Piece, {\n    color: \"red\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 29\n    }\n  }), React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 29\n    }\n  }, \"Scale is \", scale._value), React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 29\n    }\n  }, \"Focal is \", focal.x._value, \",\", focal.y._value))))));\n});\nvar styles = StyleSheet.create({\n  table: {\n    backgroundColor: 'yellow',\n    height: SIZE,\n    width: SIZE,\n    alignItems: 'center',\n    justifyContent: 'center'\n  }\n});","map":{"version":3,"sources":["/Users/tsahi/src/AwesomeProject/table.js"],"names":["React","useState","PinchGestureHandler","State","onGestureEvent","pinchActive","pinchBegan","transformOrigin","timing","translate","vec","Animated","block","cond","eq","multiply","set","useCode","Value","Piece","props","backgroundColor","color","width","height","SIZE","state","UNDETERMINED","scale","focal","createValue","numberOfPointers","pinchGestureHandler","focalX","x","focalY","y","origin","pinch","prevScale","prevPinch","prevOrigin","finalScale","finalPinch","add","midPoint","adjustedFocal","sub","minus","END","styles","table","transform","require","_value","StyleSheet","create","alignItems","justifyContent"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { ImageBackground, StyleSheet, Text, View } from 'react-native';\nimport { PinchGestureHandler, State} from 'react-native-gesture-handler';\nimport { onGestureEvent, pinchActive, pinchBegan, transformOrigin, timing, translate, vec} from \"react-native-redash\";\nimport Animated, { block, cond, eq,  multiply, set, useCode, Value } from 'react-native-reanimated';\n\nfunction Piece(props) {\n    return (\n        <View style={{ backgroundColor: props.color, width: 30, height: 30 }} />\n    );\n}\n\nconst SIZE = 300;\n\nexport default (props) => {\n    // gesture params\n    const state = new Value(State.UNDETERMINED);\n    const scale = new Value(1);\n    const focal = vec.createValue(0, 0);\n    const numberOfPointers = new Value(0);\n    const pinchGestureHandler = onGestureEvent({numberOfPointers, state, scale, focalX: focal.x, focalY: focal.y});\n\n    // translation\n    const origin = vec.createValue(0, 0);\n    const pinch = vec.createValue(0, 0);\n\n    // pre state params\n    const prevScale = new Value(1)\n    const prevPinch = vec.createValue(0, 0)\n    const prevOrigin = vec.createValue(0, 0)\n\n    // final transform\n    const finalScale =  multiply(scale, prevScale);\n    const finalPinch = vec.add(pinch, prevPinch);\n    \n    //const adjustedFocal = vec.add(vec.multiply(vec.sub(focal, {x: SIZE / 2, y: SIZE / 2}), prevScale), prevPinch);\n    const midPoint = {x: SIZE / 2, y: SIZE / 2}\n    const adjustedFocal = vec.sub(focal, midPoint);\n    // update on conditions\n    useCode(\n        () =>\n          block([\n            cond(pinchBegan(state), vec.set(origin, adjustedFocal)),\n            cond(pinchActive(state, numberOfPointers), [\n                vec.set(pinch, vec.minus(vec.sub(origin, adjustedFocal))),\n            ]),\n            cond(eq(state, State.END), [\n                set(prevScale, scale),\n                vec.set(prevPinch, finalPinch),\n                vec.set(prevOrigin, origin),\n                // set(pinch.x, timing({ from: pinch.x, to: 0 })),\n                // set(pinch.y, timing({ from: pinch.y, to: 0 })),\n                // set(scale, timing({ from: scale, to: 1 })),\n                // set(origin.x, timing({ from: origin.x, to: 0 })),\n                // set(origin.y, timing({ from: origin.y, to: 0 })),\n            ]),\n          ]),\n        [adjustedFocal, numberOfPointers, origin, pinch, scale, state]\n      );\n\n    return (\n        <Animated.View style={{ width: SIZE, height: SIZE }}>\n            <PinchGestureHandler {...pinchGestureHandler}>\n                <Animated.View>\n                    <Animated.View style={[\n                                styles.table, \n                                {\n                                    transform: [\n                                        \n                                        //...translate(finalPinch),\n                                        //...transformOrigin(origin, {scale: finalScale}),\n                                        \n                                        ...translate(origin),\n                                        {scale: scale},\n                                        ...translate(vec.multiply(origin, -1)),\n                                    ]\n                                }\n                            ]}>\n                        <ImageBackground source={require('./assets/us-map.jpg')} style={{ width: SIZE, height: SIZE }} >\n                            <Piece color=\"blue\"/>\n                            <Piece color=\"red\"/>\n                            <Text>Scale is {scale._value}</Text>\n                            <Text>Focal is {focal.x._value},{focal.y._value}</Text>\n                        </ImageBackground>\n                    </Animated.View>\n                </Animated.View>\n            </PinchGestureHandler>\n        </Animated.View>\n        );\n}\n\nconst styles = StyleSheet.create({\n    table: {\n      backgroundColor: 'yellow',\n      height: SIZE,\n      width: SIZE,\n      alignItems: 'center',\n      justifyContent: 'center',\n    },\n  });\n"]},"metadata":{},"sourceType":"module"}